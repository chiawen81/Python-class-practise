# 基本語法：集合
##################################################
'''
NOTE:
1. 集合的最大特點：
    - 不會出現重複的元素
    - 不保證任何排序
2. 集合以「大括號」建立
'''

###### 1. 資料形式 ######
########################
set1={5,3,5,1,3}
print(set1)     
# output:{1,3,5}   
'''
NOTE:
1. 集合會自動濾掉重複的
2. 看起來有排序，實際上是
    CPython 在印出 set 時，依照它底層雜湊表（hash table）的結構走訪元素，而剛好 {1,3,5} 這三個小整數的雜湊值讓它依序放在「從小到大」的位置上──並不是 Python 幫你做了排序。
''' 


###### 2. 建立空集合要用set ######
#################################
set2=set()
print(set2)
# output:set()
'''
NOTE:
雖然set的值以大括號包起來
但建立空集合時，若直接寫{}，會被認為是「字典」型別
''' 


###### 3. 透過迴圈建立 ######
############################
set3=set([i for i in range(1,6)])
print(set3)
# output:{1, 2, 3, 4, 5}


###### 4. 元組轉集合 ######
############################
tuple4=(4,2,7,3,2,3)
set4=set(tuple4)
print(set4)
# output:{2, 3, 4, 7}
'''
NOTE:
轉成集合時，會刪掉重複值(集合的特性)
'''


###### 5. 用"add"新增元素至集合 ######
#####################################
set5={1,2,3}
set5.add(10)
print(set5)
# output:{10, 1, 2, 3}
'''
NOTE:
這就是set不保證任何排序的最佳例子XD
'''


###### 6. 用"remove"移除元組內的元素 ######
#########################################
set6={1,2,3,4,5}
set6.remove(1)
print(set6)
# output:{2, 3, 4, 5}


###### 7. 其它元組可用的python內建API ######
##########################################
'''
NOTE:
有 len、max 、min、sum、in、not in、*、+ 
'''
set7={5,32,8,2,4,7,5}
print(len(set7))   # Output:6
print(sum(set7))   # Output:58
print(max(set7))   # Output:32
print(min(set7))   # Output:2
print(7 in set7)   # Output:True
print(9 not in set7)   # Output:True


###### 8. 搭配迴圈應用 ######
############################
set8={3,8,22,3,66,4}
for i in set8:
    print(i)
# output:
# 66
# 3
# 4
# 22
# 8


###### 9. 應用於聯集、交集、差集、對稱差 ######
#############################################
set9={66,3,2,6,7}
'''NOTE 01:用「&」取得兩者交集
'''
print(set9 & set8)   # Output:{66, 3}

'''NOTE 02:用「|」取得兩者聯集
'''
print(set9 | set8)   # Output:{2, 3, 66, 4, 6, 7, 8, 22}

'''NOTE 03:
    用「-」取得差集
    去除兩者共有部分，前者所剩餘的元素
'''
print(set9-set8)   # Output:{2, 6, 7}

'''NOTE 04:
    用「^」取得兩者聯集
    去除兩者共有部分，兩者所剩餘的元素
'''
print(set9 ^ set8)   # Output:{4, 2, 22, 6, 8, 7}


###### 9. 應用於子集合、超集合 ######
###################################
'''
NOTE:
當A是B的一部分，則
1. A為B的「子集合」，語法以"issubset"表示
2. B為A的「超級合」，語法以"issuperset"表示
'''
set9A={1,2,3,4,5,6}
set9B={1,2,3,4,5,6,7,8,9,10}
print(set9A.issubset(set9B))   # Output:True
print(set9B.issuperset(set9A))   # Output:True


###### 10. 可應用比較運算子 ######
#################################
'''NOTE:可用「==」 、「 !=」等比較運算子
'''
set10A={1,2,3,4,5,6}
set10B={1,2,3,4,5,6,7,8,9,10}
set10C={1,2,3,4,5,6}
print(set10A==set10C)   # Output:True
print(set10A==set10B)   # Output:False
print(set10A!=set10B)   # Output:True
